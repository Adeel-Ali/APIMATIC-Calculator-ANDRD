/*
 * APIMATICCalculatorLib
 *
 * This file was automatically generated by APIMATIC v2.0 on 10/07/2016
 */
package io.apimatic.examples.controllers;

import android.support.test.InstrumentationRegistry;
import android.support.test.runner.AndroidJUnit4;
import android.test.suitebuilder.annotation.LargeTest;

import static org.junit.Assert.*;

import java.io.*;
import java.util.*;

import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;
import org.junit.runner.RunWith;

import io.apimatic.examples.models.*;
import io.apimatic.examples.exceptions.*;
import io.apimatic.examples.APIHelper;
import io.apimatic.examples.Configuration;
import io.apimatic.examples.testing.TestHelper;
import io.apimatic.examples.controllers.SimpleCalculatorController;
import io.apimatic.examples.controllers.syncwrapper.APICallBackCatcher;

import com.fasterxml.jackson.core.type.TypeReference;

@RunWith(AndroidJUnit4.class)
@LargeTest
public class SimpleCalculatorControllerTest extends ControllerTestBase {
    
    /**
     * Controller instance (for all tests)
     */
    private static SimpleCalculatorController controller;
    
    /**
     * Setup test class
     */
    @BeforeClass
    public static void setUpClass() {
        Configuration.initialize(InstrumentationRegistry.getContext());
        controller = getClient().getSimpleCalculator();
    }

    /**
     * Tear down test class
     * @throws IOException
     */
    @AfterClass
    public static void tearDownClass() throws IOException {
        controller = null;
    }

    /**
     * Test Case to see if Calculator works
     * @throws Throwable
     */
    @Test
    public void testSummationTest() throws Throwable {
        // Parameters for the API call
        GetCalculateInput input = new GetCalculateInput();
        input.setOperation(OperationTypeEnum.fromString("SUM"));
        input.setX(5);
        input.setY(6);

        // Set callback and perform API call
        double result = 0;
        APICallBackCatcher<Double> response = new APICallBackCatcher<Double>();
        controller.setHttpCallBack(httpResponse);
        controller.getCalculateAsync(input, response);
        result = response.getResult();

       // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test whether the captured response is as we expected
        assertNotNull("Result does not exist", 
                result);
 
        assertEquals("Response does not match expected value", 
            11.0, result, ASSERT_PRECISION);
    }

    /**
     * Test Case to see if Calculator works
     * @throws Throwable
     */
    @Test
    public void testMultiplicationTest() throws Throwable {
        // Parameters for the API call
        GetCalculateInput input = new GetCalculateInput();
        input.setOperation(OperationTypeEnum.fromString("MULTIPLY"));
        input.setX(5);
        input.setY(6);

        // Set callback and perform API call
        double result = 0;
        APICallBackCatcher<Double> response = new APICallBackCatcher<Double>();
        controller.setHttpCallBack(httpResponse);
        controller.getCalculateAsync(input, response);
        result = response.getResult();

       // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test whether the captured response is as we expected
        assertNotNull("Result does not exist", 
                result);
 
        assertEquals("Response does not match expected value", 
            30.0, result, ASSERT_PRECISION);
    }

}
